{"version":3,"sources":["services/Api.js","components/Legend.js","components/FoodCard.js","components/Loading.js","pages/Nutrition.js","components/Navbar.js","pages/BMRestimate.js","pages/SignUp.js","pages/SignIn.js","pages/Main.js","components/CalorieBurnSuggestion.js","components/Profile.js","components/BMRform.js","components/AccountSubMenu.js","components/UpdateProfileForm.js","components/AccountDeleteForm.js","pages/Account.js","pages/Verification.js","components/NuReportCard.js","components/OverviewPieChart.js","pages/Overview.js","components/NuReportItem.js","pages/NuReportDisplay.js","components/App.js","reportWebVitals.js","index.js","swDev.js"],"names":["USERS","REPORTS","fetchReq","updateBMR","token","bmr","a","reqObj","method","headers","Authorization","body","JSON","stringify","user","parseFloat","fetch","then","resp","json","updateProfile","newPw","newNm","newEm","password","name","email","deleteAccount","username","getUserInfo","res","getItem","itemInput","saveReport","user_id","reportTitle","date","foodList","reportName","intakeDate","intakes","getReports","getReport","id","deleteReport","handleSignIn","handleSignUp","Legend","props","carbs","protein","fat","fiber","useEffect","carbRangeCalc","proteinRangeCalc","fatRangeCalc","fiberRangeCalc","total","carbIntake","Math","ceil","carbIntakeDOM","document","querySelector","style","color","innerText","proteinIntake","proteinIntakeDOM","fatIntake","fatIntakeDOM","fiberIntake","fiberIntakeDOM","className","FoodCard","string","food","handleDelete","data-id","charAt","toUpperCase","slice","onClick","e","quantity","parentDOM","target","parentNode","overflow","height","handleDetail","toFixed","Loading","Nutrition","loading","setLoading","useState","calories","setCalories","setCarbs","setProtein","setFats","setFiber","setFoodList","setItemInput","quantityInput","setQuantity","errorMessage","setErrorMessage","formChange","setFormChange","caloriesInput","setCaloriesInput","carbsInput","setCarbsInput","proteinInput","setProteinInput","fatInput","setFatInput","fiberInput","setFiberInput","reportTitleInput","setReportTitleInput","intakeDateInput","setIntakeDateInput","isReportFormOpen","setIsReportFormOpen","chartData","title","value","addItem","preventDefault","btn","isNaN","disabled","oldArr","random","img","resetInput","handleManualSubmit","API","data","nutrients","ENERC_KCAL","CHOCDF","PROCNT","FAT","FIBTG","foodId","label","image","handleSubmit","parsed","catch","handleLegendSeverity","dataset","found","find","filter","timeConverter","totalMin","hours","rhours","floor","minutes","round","checkBox","checked","localStorage","openReportSaveForm","animate","animationDuration","animationEasing","center","lengthAngle","lineWidth","paddingAngle","startAngle","viewBoxSize","dataEntry","percentage","labelPosition","labelStyle","fontSize","fontColor","fontWeight","onSubmit","Date","length","getTime","err","alert","handleSaveReport","type","placeholder","onChange","map","withRouter","handleLogout","to","role","htmlFor","BMRestimate","genderInput","setGenderInput","ageInput","setAgeInput","weightInput","setWeightInput","heightInput","setHeightInput","setBMRestimate","error","setError","toLowerCase","calcBMR","handleGenderInput","handleAgeInput","handleWeightInput","handleHeightInput","SignUp","history","setUsername","setPassword","setName","setEmail","successMessage","setSuccessMessage","push","SignIn","setVerified","setUpdateClicked","setDeleteClicked","Main","CalorieBurnSuggestion","result","currDateCalorieSum","abs","Profile","handleRemainingCalorie","BMRform","bmrInput","handleUpdateBMR","setBMRInput","leadToBMRpage","Fragment","AccountSubMenu","handleVerification","handleUpdateBMRbtn","UpdateProfileForm","newPasswordInput","newPasswordConfirmationInput","newNameInput","newEmailInput","handleUpdateProfile","setNewPasswordInput","setNewPasswordConfirmationInput","setNewNameInput","setNewEmailInput","AccountDeleteForm","handleAccountDelete","Account","verified","updateClicked","deleteClicked","updateBMRclicked","setUpdateBMRclicked","setCurrDateCalorieSum","sum","forEach","currMonth","getMonth","currYear","getFullYear","currDate","getDate","reportMonth","parseInt","split","reportYear","reportDate","handleTotalCalIntake","window","confirm","console","log","removeItem","message","Verification","NuReportCard","report","renderNuReports","handleDeleteReport","OverviewPieChart","curr","nutritions","totalNutrition","setTotalNutrition","totalCurrNutrition","setTotalCurrNutrition","currColor","setCurrColor","colors","el","handleTotalNutritionCalc","handleCalcNutrition","handlePercentageCalc","Overview","nuReports","setNuReports","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","yearOptions","setYearOptions","monthOptions","setMonthOptions","filteredData","sortedData","sort","b","keyA","created_at","keyB","temp","i","handleSetYearOptions","handleSetMonthOptions","options","arr","handleNuReportCard","toLocaleString","month","handleStringifyMonth","nutrition","scale","pop","lastDate","toString","totalNut","intake","handleSumUpNut","handleNuCalculation","Paper","max","valueField","argumentField","barWidth","text","renderNuCharts","NuReportItem","parentNodeDOM","NuReportDisplay","match","reportData","setReportData","handleNuCalc","useCallback","maxCal","maxCarbs","maxPro","maxFat","maxFiber","item","handleRenderReport","params","handleFoodCards","App","setUserData","setItem","jwt","classList","contains","exact","path","render","routeProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","swURL","process","navigator","serviceWorker","register","response","warn","swDev"],"mappings":"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","file":"static/js/main.f9433289.chunk.js","sourcesContent":["const ITEMS = \"https://edamam-food-and-grocery-database.p.rapidapi.com/parser?ingr=\";\r\n// Localhost =>\r\n// const USERS = \"http://localhost:3001/api/v1/\";\r\n// const REPORTS = \"http://localhost:3001/nutrition_reports/\";\r\n// Heroku =>\r\nconst USERS = \"https://nutrack-api.herokuapp.com/api/v1/\";\r\nconst REPORTS = \"https://nutrack-api.herokuapp.com/nutrition_reports/\";\r\n\r\nconst fetchReq = {\r\n    // Account Component Fetch\r\n    updateBMR: async (token, bmr) => {\r\n        const reqObj = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accepts\": \"application/json\",\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({user:{\r\n                bmr: parseFloat(bmr),\r\n            }})\r\n        };\r\n        return await fetch(`${USERS}update-profile`, reqObj)\r\n        .then(resp => resp.json())\r\n    },\r\n    updateProfile: async (token, newPw, newNm, newEm) => {\r\n        const reqObj = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accepts\": \"application/json\",\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({user:{\r\n                password: newPw,\r\n                name: newNm,\r\n                email: newEm\r\n            }})\r\n        };\r\n        return await fetch(`${USERS}update-profile`, reqObj)\r\n        .then(resp => resp.json())\r\n    },\r\n    deleteAccount: async (token, username) => {\r\n        const reqObj = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accepts\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({user:{ username: username }})\r\n        };\r\n        return await fetch(`${USERS}delete-account`, reqObj)\r\n        .then(resp => resp.json())\r\n    },\r\n    // App Component Fetch\r\n    getUserInfo: async (token) => {\r\n        const reqObj = {\r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        };\r\n        return await fetch(`${USERS}profile`, reqObj)\r\n        .then(res => res.json())\r\n    },\r\n    // Nutrition Component Fetch\r\n    getItem: async (itemInput) => {\r\n        return await fetch(`${ITEMS}${itemInput}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"x-rapidapi-key\":\"9c53497f87msh5a9410759cd8eafp149cecjsn0204a28c3b8c\",\r\n              \"x-rapidapi-host\": \"edamam-food-and-grocery-database.p.rapidapi.com\",\r\n            },\r\n        })\r\n        .then((resp) => resp.json())\r\n    },\r\n    saveReport: async (token, user_id, reportTitle, date, foodList) => {\r\n        const reqObj = {\r\n            method: \"POST\",\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              user_id: user_id,\r\n              reportName: reportTitle,\r\n              intakeDate: date,\r\n              intakes: foodList,\r\n            }),\r\n        };\r\n        return await fetch(REPORTS, reqObj)\r\n        .then((resp) => resp.json())\r\n    },\r\n    // Overview Component Fetch\r\n    getReports: async (token) => {\r\n        const reqObj = {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            }\r\n        };\r\n        return await fetch(REPORTS, reqObj)\r\n        .then(resp => resp.json())\r\n    },\r\n    // NuReportDisplay Component Fetch\r\n    getReport: async (token, id) => {\r\n        const reqObj = {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            }\r\n        };\r\n        return await fetch(`${REPORTS}${id}`, reqObj)\r\n        .then(resp => resp.json())\r\n    },\r\n    // NuReportCard Component Fetch\r\n    deleteReport: async (token, id) => {\r\n        const reqObj = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            }\r\n        };\r\n        return await fetch(`${REPORTS}${id}`, reqObj)\r\n    },\r\n    // SignIn Component Fetch\r\n    handleSignIn: async (username, password) => {\r\n        const reqObj = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({user:{\r\n                username: username,\r\n                password: password\r\n            }})\r\n        };\r\n        return await fetch(`${USERS}login`, reqObj)\r\n        .then(resp => resp.json())\r\n    },\r\n    // SignUp Component Fetch\r\n    handleSignUp: async (username, password, name, email) => {\r\n        const reqObj = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({user:{\r\n                username: username,\r\n                password: password,\r\n                name: name,\r\n                email: email\r\n            }})\r\n        };\r\n        return await fetch(`${USERS}users`, reqObj)\r\n        .then(resp => resp.json())\r\n    },\r\n}\r\nexport default fetchReq;","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../style/Legend.scss\";\r\n\r\nconst Legend = (props) => {\r\n    const {\r\n        carbs,\r\n        protein,\r\n        fat,\r\n        fiber\r\n    } = props;\r\n\r\n    useEffect(() => {\r\n        carbRangeCalc();\r\n        proteinRangeCalc();\r\n        fatRangeCalc();\r\n        fiberRangeCalc();\r\n    })\r\n\r\n    const carbRangeCalc = () => {\r\n        // 45~65%\r\n        let total = parseFloat(carbs) + parseFloat(protein) + parseFloat(fat) + parseFloat(fiber)\r\n        let carbIntake = Math.ceil((parseFloat(carbs)/total)*100);\r\n        const carbIntakeDOM = document.querySelector(\".carbIntake\");\r\n        if(carbIntake < 45 && carbIntake > 30){\r\n            carbIntakeDOM.style.color = \"#3366CC\";\r\n            carbIntakeDOM.innerText = \"Low\";\r\n        } else if(carbIntake >= 45 && carbIntake <= 65){\r\n            carbIntakeDOM.style.color = \"green\";\r\n            carbIntakeDOM.innerText = \"Appropriate\";\r\n        } else if(carbIntake > 65 && carbIntake < 70){\r\n            carbIntakeDOM.style.color = \"#F84A04\";\r\n            carbIntakeDOM.innerText = \"High\";\r\n        } else if(carbIntake > 70){\r\n            carbIntakeDOM.style.color = \"#880102\";\r\n            carbIntakeDOM.innerText = \"Very High\";\r\n        } else if(carbIntake <= 30){\r\n            carbIntakeDOM.style.color = \"#A1A1A1\";\r\n            carbIntakeDOM.innerText = \"Very Low\";\r\n        }\r\n    }\r\n\r\n    const proteinRangeCalc = () => {\r\n        // 25~35%\r\n        let total = parseFloat(carbs) + parseFloat(protein) + parseFloat(fat) + parseFloat(fiber)\r\n        let proteinIntake = Math.ceil((parseFloat(protein)/total)*100);\r\n        const proteinIntakeDOM = document.querySelector(\".proteinIntake\");\r\n        if(proteinIntake < 25 && proteinIntake > 20){\r\n            proteinIntakeDOM.style.color = \"#3366CC\";\r\n            proteinIntakeDOM.innerText = \"Low\";\r\n        } else if(proteinIntake >= 25 && proteinIntake <= 35){\r\n            proteinIntakeDOM.style.color = \"green\";\r\n            proteinIntakeDOM.innerText = \"Appropriate\";\r\n        } else if(proteinIntake > 35 && proteinIntake < 45){\r\n            proteinIntakeDOM.style.color = \"#F84A04\";\r\n            proteinIntakeDOM.innerText = \"High\";\r\n        } else if(proteinIntake > 45){\r\n            proteinIntakeDOM.style.color = \"#880102\";\r\n            proteinIntakeDOM.innerText = \"Very High\";\r\n        } else if(proteinIntake <= 20){\r\n            proteinIntakeDOM.style.color = \"#A1A1A1\";\r\n            proteinIntakeDOM.innerText = \"Very Low\";\r\n        }\r\n    }\r\n\r\n    const fatRangeCalc = () => {\r\n        // 20~30%\r\n        let total = parseFloat(carbs) + parseFloat(protein) + parseFloat(fat) + parseFloat(fiber)\r\n        let fatIntake = Math.ceil((parseFloat(fat)/total)*100);\r\n        const fatIntakeDOM = document.querySelector(\".fatIntake\");\r\n        if(fatIntake < 20 && fatIntake > 10){\r\n            fatIntakeDOM.style.color = \"#3366CC\";\r\n            fatIntakeDOM.innerText = \"Low\";\r\n        } else if(fatIntake >= 20 && fatIntake <= 30){\r\n            fatIntakeDOM.style.color = \"green\";\r\n            fatIntakeDOM.innerText = \"Appropriate\";\r\n        } else if(fatIntake > 30 && fatIntake < 40){\r\n            fatIntakeDOM.style.color = \"#F84A04\";\r\n            fatIntakeDOM.innerText = \"High\";\r\n        } else if(fatIntake > 40){\r\n            fatIntakeDOM.style.color = \"#880102\";\r\n            fatIntakeDOM.innerText = \"Very High\";\r\n        } else if(fatIntake <= 10){\r\n            fatIntakeDOM.style.color = \"#A1A1A1\";\r\n            fatIntakeDOM.innerText = \"Very Low\";\r\n        }\r\n    }\r\n\r\n    const fiberRangeCalc = () => {\r\n        // 5~10%\r\n        let total = parseFloat(carbs) + parseFloat(protein) + parseFloat(fat) + parseFloat(fiber)\r\n        let fiberIntake = Math.ceil((parseFloat(fiber)/total)*100);\r\n        const fiberIntakeDOM = document.querySelector(\".fiberIntake\");\r\n        if(fiberIntake < 5 && fiberIntake > 3){\r\n            fiberIntakeDOM.style.color = \"#3366CC\";\r\n            fiberIntakeDOM.innerText = \"Low\";\r\n        } else if(fiberIntake >= 5 && fiberIntake <= 10){\r\n            fiberIntakeDOM.style.color = \"green\";\r\n            fiberIntakeDOM.innerText = \"Appropriate\";\r\n        } else if(fiberIntake > 10 && fiberIntake < 15){\r\n            fiberIntakeDOM.style.color = \"#F84A04\";\r\n            fiberIntakeDOM.innerText = \"High\";\r\n        } else if(fiberIntake > 15){\r\n            fiberIntakeDOM.style.color = \"#880102\";\r\n            fiberIntakeDOM.innerText = \"Very High\";\r\n        } else if(fiberIntake <= 3){\r\n            fiberIntakeDOM.style.color = \"#A1A1A1\";\r\n            fiberIntakeDOM.innerText = \"Very Low\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"legendCont\">\r\n            <div><span className=\"carbLegendIcon\"></span><span className=\"legendTitle\">Total Carbs:</span> {carbs} g <span className=\"carbIntake\"></span></div>\r\n            <div><span className=\"proteinLegendIcon\"></span><span className=\"legendTitle\">Total Protein:</span> {protein} g <span className=\"proteinIntake\"></span></div>\r\n            <div><span className=\"fatLegendIcon\"></span><span className=\"legendTitle\">Total Fat:</span> {fat} g <span className=\"fatIntake\"></span></div>\r\n            <div><span className=\"fiberLegendIcon\"></span><span className=\"legendTitle\">Total Fiber:</span> {fiber} g <span className=\"fiberIntake\"></span></div>\r\n        </div>\r\n    )\r\n}\r\nLegend.propTypes = {\r\n    carbs: PropTypes.string.isRequired,\r\n    protein: PropTypes.string.isRequired,\r\n    fat: PropTypes.string.isRequired,\r\n    fiber: PropTypes.string.isRequired\r\n};\r\nexport default Legend;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../style/FoodCard.scss\";\r\n\r\nconst FoodCard = (props) => {\r\n    const {\r\n        food,\r\n        handleDelete\r\n    } = props;\r\n\r\n    const capitalizeFirstLetter = (string) => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n    \r\n    const handleDetail = (e) => {\r\n        const parentDOM = e.target.parentNode.parentNode;\r\n        if (parentDOM.style.overflow === \"visible\"){\r\n            parentDOM.style.overflow = \"hidden\";\r\n            parentDOM.style.height = \"4.5em\";\r\n            e.target.innerText = \"More Detail\"\r\n        } else {\r\n            parentDOM.style.overflow = \"visible\";\r\n            parentDOM.style.height = \"10em\";\r\n            e.target.innerText = \"Show Less\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"foodCard\" data-id={food.id}>\r\n            <div className=\"innerCard\">\r\n                <div>\r\n                    <strong className=\"card-title\">{capitalizeFirstLetter(food.name)}</strong>\r\n                    <div className=\"deleteBtn\" onClick={(e) => handleDelete(e)}>X</div>\r\n                </div>\r\n                <div><span className=\"details\">Qty:</span> {food.quantity}</div>\r\n                <div className=\"moreDetail\" onClick={(e) => handleDetail(e)}>More Detail</div>\r\n                <div><span className=\"details\">Carb:</span> {food.carbs.toFixed(2)}g</div>\r\n                <div><span className=\"details\">Protein: </span> {food.protein.toFixed(2)}g</div>\r\n                <div><span className=\"details\">Fat:</span> {food.fat.toFixed(2)}g</div>\r\n                <div><span className=\"details\">Fiber:</span> {food.fiber.toFixed(2)}g</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nFoodCard.propTypes = {\r\n    food: PropTypes.object.isRequired,\r\n    handleDelete: PropTypes.func.isRequired,\r\n};\r\nexport default FoodCard;","import React from \"react\";\r\nimport \"../style/Loading.css\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"lds-facebook\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\nexport default Loading;","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport API from \"../services/Api.js\";\r\nimport Legend from \"../components/Legend.js\";\r\nimport FoodCard from \"../components/FoodCard.js\";\r\nimport Loading from \"../components/Loading.js\";\r\nimport \"../style/Nutrition.scss\";\r\n\r\nconst Nutrition = (props) => {\r\n  const {\r\n    user,\r\n    loading,\r\n    getUserInfo,\r\n    setLoading,\r\n  } = props; \r\n\r\n  const [calories, setCalories] = useState(0);\r\n  const [carbs, setCarbs] = useState(0.000045);\r\n  const [protein, setProtein] = useState(0.00003);\r\n  const [fat, setFats] = useState(0.00002);\r\n  const [fiber, setFiber] = useState(0.000005);\r\n  const [foodList, setFoodList] = useState([]);\r\n\r\n  const [itemInput, setItemInput] = useState(\"\");\r\n  const [quantityInput, setQuantity] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const [formChange, setFormChange] = useState(false);\r\n\r\n  const [caloriesInput, setCaloriesInput] = useState(\"\");\r\n  const [carbsInput, setCarbsInput] = useState(\"\");\r\n  const [proteinInput, setProteinInput] = useState(\"\");\r\n  const [fatInput, setFatInput] = useState(\"\");\r\n  const [fiberInput, setFiberInput] = useState(\"\");\r\n\r\n  const [reportTitleInput, setReportTitleInput] = useState(\"\");\r\n  const [intakeDateInput, setIntakeDateInput] = useState(\"\");\r\n\r\n  const [isReportFormOpen, setIsReportFormOpen] = useState(false);\r\n\r\n  const chartData = [\r\n    { title: \"Carbs\", value: carbs, color: \"#E96255\" },\r\n    { title: \"Protein\", value: protein, color: \"#EFC319\" },\r\n    { title: \"Fat\", value: fat, color: \"#96C93D\" },\r\n    { title: \"Fiber\", value: fiber, color: \"#58A5BD\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const checkBox = document.querySelector(\".checkBox\");\r\n    if (checkBox.checked) {\r\n      checkBox.checked = false;\r\n    }\r\n    if (!user) {\r\n      getUserInfo();\r\n    }\r\n  });\r\n\r\n  function addItem(e) {\r\n    e.preventDefault();\r\n    let btn = document.querySelector(\".add-item-btn\");\r\n    if (quantityInput <= 0) return setErrorMessage(\"Quantity has to be over 0.\");\r\n    if (isNaN(quantityInput)) return setErrorMessage(\"Quantity has to be number.\");\r\n    btn.disabled = true;\r\n    setLoading(true);\r\n    if (formChange) {\r\n      handleManualSubmit();\r\n      setLoading(false);\r\n      btn.disabled = false;\r\n    } else {\r\n        API.getItem(itemInput)\r\n        .then((data) => handleSubmit(data.parsed[0].food))\r\n        .catch(() => {\r\n          setLoading(false);\r\n          setErrorMessage(\"Item Not Found\");\r\n        });\r\n      resetInput();\r\n      btn.disabled = false;\r\n    }\r\n  }\r\n\r\n  function handleSubmit(food) {\r\n    setCalories(calories + (food.nutrients.ENERC_KCAL).toFixed(0) * quantityInput);\r\n    setCarbs(carbs + (food.nutrients.CHOCDF).toFixed(2) * quantityInput);\r\n    setProtein(protein + (food.nutrients.PROCNT).toFixed(2) * quantityInput);\r\n    setFats(fat + (food.nutrients.FAT).toFixed(2) * quantityInput);\r\n    if (!food.nutrients.FIBTG) {\r\n      setFiber(fiber + 0);\r\n      setFoodList((oldArr) => [\r\n        ...oldArr,\r\n        {\r\n          id: food.foodId + Math.random(),\r\n          name: food.label,\r\n          calories: (food.nutrients.ENERC_KCAL).toFixed(0) * quantityInput,\r\n          quantity: quantityInput,\r\n          carbs: (food.nutrients.CHOCDF).toFixed(2) * quantityInput,\r\n          protein: (food.nutrients.PROCNT).toFixed(2) * quantityInput,\r\n          fat: (food.nutrients.FAT).toFixed(2) * quantityInput,\r\n          fiber: 0,\r\n          img: food.image,\r\n        },\r\n      ]);\r\n    } else {\r\n      setFiber(fiber + (food.nutrients.FIBTG).toFixed(2) * quantityInput);\r\n      setFoodList((oldArr) => [\r\n        ...oldArr,\r\n        {\r\n          id: food.foodId + Math.random(),\r\n          name: food.label,\r\n          calories: (food.nutrients.ENERC_KCAL).toFixed(0) * quantityInput,\r\n          quantity: quantityInput,\r\n          carbs: (food.nutrients.CHOCDF).toFixed(2) * quantityInput,\r\n          protein: (food.nutrients.PROCNT).toFixed(2) * quantityInput,\r\n          fat: (food.nutrients.FAT).toFixed(2) * quantityInput,\r\n          fiber: (food.nutrients.FIBTG).toFixed(2) * quantityInput,\r\n          img: food.image,\r\n        },\r\n      ]);\r\n    }\r\n    setLoading(false);  \r\n    setErrorMessage(\"\");\r\n  }\r\n\r\n  function handleInputCheck(){\r\n    if (itemInput === \"\") return setErrorMessage(\"Item name cannot be an empty.\")\r\n    if (quantityInput < 1 || quantityInput === \"\") return setErrorMessage(\"Quantity cannot be zero, negative number, empty.\");\r\n    if (caloriesInput < 0 || caloriesInput === \"\") return setErrorMessage(\"Calories cannot be negative number or empty.\");\r\n    if (isNaN(caloriesInput)) return setErrorMessage(\"Calories has to be number.\");\r\n    if (carbsInput < 0 || carbsInput === \"\") return setErrorMessage(\"Carbs cannot be negative number or empty.\");\r\n    if (isNaN(carbsInput)) return setErrorMessage(\"Carbs has to be number.\");\r\n    if (proteinInput < 0 || proteinInput === \"\") return setErrorMessage(\"Protein cannot be negative number or empty.\");\r\n    if (isNaN(proteinInput)) return setErrorMessage(\"Protein has to be number.\");\r\n    if (fatInput < 0 || fatInput === \"\") return setErrorMessage(\"Fat cannot be negative number or empty.\");\r\n    if (isNaN(fatInput)) return setErrorMessage(\"Fat has to be number.\");\r\n    if (fiberInput < 0 || fiberInput === \"\") return setErrorMessage(\"Fiber cannot be negative number or empty.\");\r\n    if (isNaN(fiberInput)) return setErrorMessage(\"Fiber has to be number.\");\r\n    return true;\r\n  }\r\n\r\n  function resetInput(){\r\n    setItemInput(\"\");\r\n    setQuantity(\"\");\r\n    setCaloriesInput(\"\");\r\n    setCarbsInput(\"\");\r\n    setProteinInput(\"\");\r\n    setFatInput(\"\");\r\n    setFiberInput(\"\");\r\n    setErrorMessage(\"\");\r\n  }\r\n\r\n  function handleManualSubmit() {\r\n    if(!handleInputCheck()) return;\r\n    setCalories(calories + parseFloat(caloriesInput).toFixed(0) * quantityInput);\r\n    setCarbs(carbs + parseFloat(carbsInput).toFixed(2) * quantityInput);\r\n    setProtein(protein + parseFloat(proteinInput).toFixed(2) * quantityInput);\r\n    setFats(fat + parseFloat(fatInput).toFixed(2) * quantityInput);\r\n    setFiber(fiber + parseFloat(fiberInput).toFixed(2) * quantityInput);\r\n    setFoodList((oldArr) => [\r\n      ...oldArr,\r\n      {\r\n        id: Math.random() + itemInput + caloriesInput,\r\n        name: itemInput,\r\n        calories: parseFloat(caloriesInput).toFixed(0) * quantityInput,\r\n        quantity: quantityInput,\r\n        carbs: parseFloat(carbsInput).toFixed(2) * quantityInput,\r\n        protein: parseFloat(proteinInput).toFixed(2) * quantityInput,\r\n        fat: parseFloat(fatInput).toFixed(2) * quantityInput,\r\n        fiber: parseFloat(fiberInput).toFixed(2) * quantityInput,\r\n        img: null,\r\n      },\r\n    ]);\r\n    resetInput();\r\n  }\r\n\r\n  function handleFoodCards() {\r\n    return foodList.map((food) => {\r\n      return (\r\n        <FoodCard food={food} key={food.id + Math.random()} handleDelete={handleDelete} />\r\n      );\r\n    });\r\n  }\r\n\r\n  function handleLegendSeverity() {\r\n    document.querySelector(\".carbIntake\").style.color = \"black\";\r\n    document.querySelector(\".carbIntake\").innerText = \"\";\r\n    document.querySelector(\".proteinIntake\").style.color = \"black\";\r\n    document.querySelector(\".proteinIntake\").innerText = \"\";\r\n    document.querySelector(\".fatIntake\").style.color = \"black\";\r\n    document.querySelector(\".fatIntake\").innerText = \"\";\r\n    document.querySelector(\".fiberIntake\").style.color = \"black\";\r\n    document.querySelector(\".fiberIntake\").innerText = \"\";\r\n  }\r\n\r\n  function handleDelete(e) {\r\n    let id = e.target.parentNode.parentNode.parentNode.dataset.id;\r\n    let found = foodList.find((food) => food.id === id);\r\n    handleLegendSeverity();\r\n    calories - found.calories < 0 ? setCalories(0) : setCalories(calories - found.calories);\r\n    carbs - found.carbs < 0 ? setCarbs(0) : setCarbs(carbs - found.carbs);\r\n    protein - found.protein < 0 ? setProtein(0) : setProtein(protein - found.protein);\r\n    fat - found.fat < 0 ? setFats(0) : setFats(fat - found.fat);\r\n    fiber - found.fiber < 0 ? setFiber(0) : setFiber(fiber - found.fiber);\r\n    setFoodList(foodList.filter((food) => food.id !== id));\r\n  }\r\n\r\n  function handleManualForm() {\r\n    setIsReportFormOpen(false);\r\n    setFormChange(true);\r\n    setErrorMessage(\"\");\r\n  }\r\n\r\n  function handleFindItemForm(){\r\n    setIsReportFormOpen(false);\r\n    setFormChange(false);\r\n    setErrorMessage(\"\");\r\n  }\r\n\r\n  function handleSaveReport(e) {\r\n    e.preventDefault();\r\n    let btn = document.querySelector(\".report-save-btn\");\r\n    let date = new Date(intakeDateInput);\r\n    if (reportTitleInput.length < 1) return setErrorMessage(\"Report Title cannot be blank.\");\r\n    if (isNaN(date.getTime())) return setErrorMessage(\"Invalid Date Input. ReEnter the Date input with YYYY-MM-DD format with hyphen.\");\r\n    if (!foodList.length) return setErrorMessage(\"Item is empty! Nothing to Save.\");\r\n    btn.disabled = true;\r\n    setLoading(true);\r\n    API.saveReport(localStorage.getItem(\"user\"), user.user.id, reportTitleInput, date, foodList)\r\n      .catch(err => err)\r\n      .then(() => {\r\n        setReportTitleInput(\"\");\r\n        setIntakeDateInput(\"\");\r\n        setErrorMessage(\"\");\r\n        setFoodList([]);\r\n        setCalories(0);\r\n        setCarbs(0.000045);\r\n        setProtein(0.00003);\r\n        setFats(0.00002);\r\n        setFiber(0.000005);\r\n        setLoading(false);\r\n        handleLegendSeverity();\r\n        btn.disabled = false;\r\n        alert(\"Successfully Saved\");\r\n      });\r\n  }\r\n\r\n  function openReportSaveForm(e) {\r\n    e.preventDefault();\r\n    if (!localStorage.getItem(\"user\")) return setErrorMessage(\"Please Sign-in\");\r\n    if (!isReportFormOpen && localStorage.getItem(\"user\")) {\r\n      setIsReportFormOpen(true);\r\n      setErrorMessage(\"\");\r\n    }\r\n  }\r\n\r\n  function timeConverter(totalMin){\r\n    if(totalMin > 60){\r\n      var num = totalMin;\r\n      var hours = (num / 60);\r\n      var rhours = Math.floor(hours);\r\n      var minutes = (hours - rhours) * 60;\r\n      var rminutes = Math.round(minutes);\r\n      return rhours + \" hr \" + rminutes + \" min\";\r\n    }\r\n    return totalMin + \" min\";\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      {loading ?\r\n      <Loading />\r\n      :\r\n      <div className=\"whole-container\">\r\n        <div className=\"nutrition-menu\">\r\n            <div className=\"addItemManually manualFormOpen\" onClick={(e) => handleFindItemForm(e)}>\r\n                Find Item\r\n            </div>\r\n            <div className=\"addItemManually manualFormOpen\" onClick={(e) => handleManualForm(e)}>\r\n                Add Item Manually\r\n            </div>\r\n            <div className=\"saveReportFormBTN\" onClick={(e) => openReportSaveForm(e)}>\r\n                Save Nutrition Report\r\n            </div>\r\n        </div>\r\n        <div className=\"donutChart\">\r\n          <div className=\"chart\">\r\n            <PieChart\r\n              animate\r\n              animationDuration={800}\r\n              animationEasing=\"ease-out\"\r\n              center={[50, 50]}\r\n              data={chartData}\r\n              lengthAngle={360}\r\n              lineWidth={75}\r\n              paddingAngle={2}\r\n              startAngle={0}\r\n              viewBoxSize={[100, 100]}\r\n              label={({ dataEntry }) =>\r\n                `${dataEntry.title}: ${Math.round(dataEntry.percentage)}%`\r\n              }\r\n              labelPosition={60}\r\n              labelStyle={{\r\n                fontSize: \"5px\",\r\n                fontColor: \"FFFFA\",\r\n                fontWeight: \"800\",\r\n              }}\r\n            ></PieChart>\r\n          </div>\r\n          <div className=\"calories\">{calories.toFixed(0)}<br />Kcal</div>\r\n        </div>\r\n        <Legend\r\n          carbs={carbs.toFixed(2)}\r\n          protein={protein.toFixed(2)}\r\n          fat={fat.toFixed(2)}\r\n          fiber={fiber.toFixed(2)}\r\n        />\r\n        <div className=\"errorMessage\">{errorMessage}</div>\r\n        {isReportFormOpen ?\r\n        <div className=\"report-save-form\">\r\n          <div>\r\n            <div className=\"segment divInForm\">\r\n              <h1>Save Report</h1>\r\n            </div>\r\n            <form className=\"addItemForm report-save-form-inner\" onSubmit={(e) => handleSaveReport(e)}>\r\n              <label className=\"inputLabel\">\r\n                <input className=\"userInput\" type=\"text\" placeholder=\"Report Title\" value={reportTitleInput} onChange={(e) => setReportTitleInput(e.target.value)} />\r\n              </label>\r\n              <label className=\"inputLabel\">\r\n                <input className=\"userInput\" type=\"text\" placeholder=\"Intake Date (YYYY-MM-DD)\" value={intakeDateInput} onChange={(e) => setIntakeDateInput(e.target.value)} />\r\n              </label>\r\n              <button className=\"red submitBtn report-save-btn\" type=\"submit\">\r\n                Save Report\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        :\r\n        <form className=\"addItemForm\" onSubmit={(e) => addItem(e)}>\r\n          <div className=\"segment divInForm\">\r\n            <h1>Add Item</h1>\r\n          </div>\r\n          {formChange ? (\r\n            <div>\r\n              <label className=\"inputLabel\">\r\n                <input className=\"userInput\" type=\"text\" placeholder=\"Item Name\"  value={itemInput}  onChange={(e) => setItemInput(e.target.value)} />\r\n              </label>\r\n              <label className=\"inputLabel\">\r\n                <input className=\"userInput\" type=\"text\" placeholder=\"Quantity (1 serving = 100g)\" value={quantityInput} onChange={(e) => setQuantity(e.target.value)} />\r\n              </label>\r\n              <label className=\"inputLabel\">\r\n                <input className=\"userInput\" type=\"text\" placeholder=\"Calories\" value={caloriesInput} onChange={(e) => setCaloriesInput(e.target.value)} />\r\n              </label>\r\n              <label className=\"inputLabel\">\r\n                <input className=\"userInput\" type=\"text\" placeholder=\"Carbs\" value={carbsInput} onChange={(e) => setCarbsInput(e.target.value)} />\r\n              </label>\r\n              <label className=\"inputLabel\">\r\n                <input className=\"userInput\" type=\"text\" placeholder=\"Protein\" value={proteinInput} onChange={(e) => setProteinInput(e.target.value)} />\r\n              </label>\r\n              <label className=\"inputLabel\">\r\n                <input className=\"userInput\" type=\"text\" placeholder=\"Fat\" value={fatInput} onChange={(e) => setFatInput(e.target.value)} />\r\n              </label>\r\n              <label className=\"inputLabel\">\r\n                <input className=\"userInput\" type=\"text\" placeholder=\"Fiber\" value={fiberInput} onChange={(e) => setFiberInput(e.target.value)} />\r\n              </label>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <label className=\"inputLabel\">\r\n                <input className=\"userInput\" type=\"text\" placeholder=\"Item Name\" value={itemInput} onChange={(e) => setItemInput(e.target.value)} />\r\n              </label>\r\n              <label className=\"inputLabel\">\r\n                <input className=\"userInput\" type=\"text\" placeholder=\"Quantity (1 serving = 100g)\" value={quantityInput} onChange={(e) => setQuantity(e.target.value)} />\r\n              </label>\r\n            </div>\r\n          )}\r\n          <button className=\"red submitBtn add-item-btn\" type=\"submit\">\r\n            ADD\r\n          </button>\r\n        </form>}\r\n        <div className=\"foodCardsCont\">{handleFoodCards()}</div>\r\n        <div className=\"calorie-burn-wrapper\">\r\n          <div className=\"inner-calorie-burn-wrapper\">\r\n            <div className=\"exercise-title\">Equivalent to:</div>\r\n            <div>\r\n              <div className=\"exercise-name\">Walking </div><span className=\"calpermin\">{timeConverter((calories / 7.6).toFixed(1))}</span><br/>\r\n              <div className=\"exercise-name\">Running </div> <span className=\"calpermin\">{timeConverter((calories / 13.2).toFixed(1))}</span><br/>\r\n              <div className=\"exercise-name\">Push Ups </div> <span className=\"calpermin\">{timeConverter((calories / 7).toFixed(1))}</span><br/>\r\n              <div className=\"exercise-name\">Sit Ups </div> <span className=\"calpermin\">{timeConverter((calories / 9).toFixed(1))}</span><br/>\r\n              <div className=\"exercise-name\">Plank </div> <span className=\"calpermin\">{timeConverter((calories / 5).toFixed(1))}</span><br/>\r\n              <div className=\"exercise-name\">Bicycle Crunch </div> <span className=\"calpermin\">{timeConverter((calories / 3).toFixed(1))}</span><br/>\r\n              <div className=\"exercise-name\">Burpees </div><span className=\"calpermin\">{timeConverter((calories / 9.4).toFixed(1))}</span><br/>\r\n              <div className=\"exercise-name\">Squat </div><span className=\"calpermin\">{timeConverter((calories / 8).toFixed(1))}</span><br/>\r\n              <div className=\"exercise-name\">Lunges </div><span className=\"calpermin\">{timeConverter((calories / 9.33).toFixed(1))}</span><br/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>}\r\n    </div>\r\n  );\r\n};\r\nNutrition.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    getUserInfo: PropTypes.func.isRequired,\r\n    setLoading: PropTypes.func.isRequired\r\n};\r\nexport default Nutrition;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../style/Navbar.scss\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n  const {\r\n    handleLogout,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"navbarCont\">\r\n        <Link to=\"/\" className=\"link-title\"><div className=\"pageTitle\" >NuReport</div></Link>\r\n        <nav role=\"navigation\">\r\n            <div id=\"menuToggle\">\r\n                  <label htmlFor=\"ckbx\" className=\"cb-hidden\">CheckBox</label>\r\n                  <input id=\"ckbx\" className=\"checkBox\" type=\"checkbox\" />\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                  {\r\n                    localStorage.getItem(\"user\") ?\r\n                    <div id=\"menu\">\r\n                      <Link to=\"/\"><div>Home</div></Link>\r\n                      <Link to=\"/account\"><div>Manage Account</div></Link>\r\n                      <Link to=\"/overview\"><div>Overview</div></Link>\r\n                      <Link to=\"/intakeestimate\"><div>Intake Estimate</div></Link>\r\n                      <Link to=\"/BMRestimate\"><div>BMR Estimate</div></Link>\r\n                      <Link to=\"/signin\" className=\"logout-btn\" onClick={(e) => {handleLogout(e)}}><div>Log out</div></Link>\r\n                    </div>\r\n                    :\r\n                    <div id=\"menu\">\r\n                      <Link to=\"/\"><div>Home</div></Link>\r\n                      <Link to=\"/signup\"><div>Sign-Up</div></Link>\r\n                      <Link to=\"/signin\"><div>Sign-In</div></Link>\r\n                      <Link to=\"/intakeestimate\"><div>Intake Estimate</div></Link>\r\n                      <Link to=\"/BMRestimate\"><div>BMR Estimate</div></Link>\r\n                    </div>\r\n                  }\r\n            </div>\r\n        </nav>\r\n    </div>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  handleLogout: PropTypes.func.isRequired,\r\n};\r\nexport default withRouter(Navbar);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../style/BMR.scss\";\r\n\r\nconst BMRestimate = (props) => {\r\n    const {\r\n        user,\r\n        getUserInfo,\r\n    } = props;\r\n\r\n    const [ genderInput, setGenderInput ] = useState(\"\");\r\n    const [ ageInput, setAgeInput ] = useState(\"\");\r\n    const [ weightInput, setWeightInput ] = useState(\"\");\r\n    const [ heightInput, setHeightInput ] = useState(\"\");\r\n\r\n    const [ BMRestimate, setBMRestimate ] = useState(0);\r\n\r\n    const [ error, setError ] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const checkBox = document.querySelector(\".checkBox\");\r\n        if(checkBox.checked){\r\n          checkBox.checked = false;\r\n        }\r\n        if(!user){\r\n            getUserInfo();\r\n        }\r\n      })\r\n\r\n    function calcBMR(e){\r\n        e.preventDefault();\r\n        if(ageInput < 0) return setError(\"Age cannot be negative number.\");\r\n        if(isNaN(ageInput)) return setError(\"Age has to be number.\");\r\n        if(weightInput < 0) return setError(\"Weight cannot be negative number.\");\r\n        if(isNaN(weightInput)) return setError(\"Weight has to be number.\");\r\n        if(heightInput < 0) return setError(\"Height cannot be negative number.\");\r\n        if(isNaN(heightInput)) return setError(\"Height has to be number.\");\r\n        if(genderInput.toLowerCase() === \"man\"){\r\n            let bmrMan = 88.362 + (13.397*weightInput) + (4.799*heightInput) - (5.677*ageInput);\r\n            setBMRestimate(bmrMan.toFixed(2));\r\n            setError(\"\");\r\n        } else if(genderInput.toLowerCase() === \"women\"){\r\n            let bmrWomen = 447.593 + (9.247*weightInput) + (3.098*heightInput) - (4.330*ageInput);\r\n            setBMRestimate(bmrWomen.toFixed(2));\r\n            setError(\"\");\r\n        } else {\r\n            setError(\"Gender has to be Man or Women.\");\r\n        }\r\n        setGenderInput(\"\");\r\n        setAgeInput(\"\");\r\n        setWeightInput(\"\");\r\n        setHeightInput(\"\");\r\n    }\r\n\r\n    function handleGenderInput(e){\r\n        e.preventDefault();\r\n        setGenderInput(e.target.value);\r\n    }\r\n\r\n    function handleAgeInput(e){\r\n        e.preventDefault();\r\n        setAgeInput(e.target.value);\r\n    }\r\n\r\n    function handleWeightInput(e){\r\n        e.preventDefault();\r\n        setWeightInput(e.target.value);\r\n    }\r\n\r\n    function handleHeightInput(e){\r\n        e.preventDefault();\r\n        setHeightInput(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           <center> <div className=\"BMRestimate\">Approx <span className=\"BMRNum\">{BMRestimate}</span> Kcal per day</div></center>\r\n            <div className=\"error\">{error}</div>\r\n            <form className=\"addItemForm\" onSubmit={(e) => calcBMR(e)}>\r\n                <div className=\"segment divInForm\">\r\n                    <h2>Calculate Approx BMR</h2>\r\n                </div>\r\n                <div>\r\n                    <label className=\"inputLabel\">\r\n                        <input className=\"userInput\" type=\"text\" placeholder=\"Gender (Man / Women)\" value={genderInput} onChange={(e) => handleGenderInput(e)}/>\r\n                    </label>\r\n                    <label className=\"inputLabel\">\r\n                        <input className=\"userInput\" type=\"text\" placeholder=\"Age\" value={ageInput} onChange={(e) => handleAgeInput(e)}/>\r\n                    </label>\r\n                    <label className=\"inputLabel\">\r\n                        <input className=\"userInput\" type=\"text\" placeholder=\"Weight (kg)\" value={weightInput} onChange={(e) => handleWeightInput(e)}/>\r\n                    </label>\r\n                    <label className=\"inputLabel\">\r\n                        <input className=\"userInput\" type=\"text\" placeholder=\"Height (cm)\" value={heightInput} onChange={(e) => handleHeightInput(e)}/>\r\n                    </label>\r\n                </div>\r\n                <button className=\"red submitBtn\" type=\"submit\">Caculate</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nBMRestimate.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    getUserInfo: PropTypes.func.isRequired,\r\n};\r\nexport default BMRestimate;","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport API from \"../services/Api.js\";\r\nimport Loading from \"../components/Loading.js\";\r\nimport \"../style/Auth.scss\";\r\n\r\nconst SignUp = (props) => {\r\n    const {\r\n        history,\r\n        loading,\r\n    } = props;\r\n\r\n    const [ username, setUsername ] = useState(\"\");\r\n    const [ password, setPassword ] = useState(\"\");\r\n    const [ name, setName ] = useState(\"\");\r\n    const [ email, setEmail ] = useState(\"\");\r\n    const [ error, setError ] = useState(\"\");\r\n    const [ successMessage, setSuccessMessage ] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const checkBox = document.querySelector(\".checkBox\");\r\n        if(checkBox.checked){\r\n          checkBox.checked = false;\r\n        }\r\n        if(localStorage.getItem(\"user\")){\r\n            history.push(\"/\")\r\n        }\r\n      }, [props])\r\n\r\n    function handleSignUp(e){\r\n        e.preventDefault();\r\n        if(successMessage !== \"\") setSuccessMessage(\"\");\r\n        if(error !== \"\") setError(\"\");\r\n        if(password.length < 6) return setError(\"Password has to be longer than 6\");\r\n        API.handleSignUp(username, password, name, email)\r\n            .catch(err => err)\r\n            .then(data => {\r\n                if(data.error) setError(data.error);\r\n                setUsername(\"\");\r\n                setPassword(\"\");\r\n                setName(\"\");\r\n                setEmail(\"\");\r\n                setSuccessMessage(\"Successfully Signed Up\");\r\n            });\r\n    }\r\n\r\n    function leadSignInPage(){\r\n        history.push(\"/signin\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading ?\r\n            <Loading />\r\n            :\r\n            <div className=\"sign-up-wrapper\">\r\n                <div className=\"errorMessage-auth\">{error}</div>\r\n                <div className=\"successMessage-auth\">{successMessage}</div>\r\n                <form className=\"addItemForm\" onSubmit={handleSignUp}>\r\n                    <div className=\"segment divInForm\">\r\n                        <center><h1 className=\"auth-title\">SIGN UP</h1></center>\r\n                    </div>\r\n                    <label className=\"inputLabel\">\r\n                        <input className=\"userInput\" type=\"text\" name=\"username\" value={username} placeholder=\"username\" onChange={(e) => setUsername(e.target.value)}/>\r\n                    </label>\r\n                    <label className=\"inputLabel\">\r\n                        <input className=\"userInput\" type=\"password\" name=\"password\" value={password} placeholder=\"password\" onChange={(e) => setPassword(e.target.value)}/>\r\n                    </label>\r\n                    <label className=\"inputLabel\">\r\n                        <input className=\"userInput\" type=\"text\" name=\"name\" value={name} placeholder=\"name\" onChange={(e) => setName(e.target.value)}/>\r\n                    </label>\r\n                    <label className=\"inputLabel\">\r\n                        <input className=\"userInput\" type=\"text\" name=\"email\" value={email} placeholder=\"email\" onChange={(e) => setEmail(e.target.value)}/>\r\n                    </label>\r\n                    <button className=\"red submitBtn\" type=\"submit\">Create Account</button>\r\n                    <div className=\"manualFormOpenBtn\" onClick={(e) => leadSignInPage(e)}>Already a member?</div>\r\n                </form>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\nSignUp.propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool,\r\n};\r\nexport default SignUp;\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport API from \"../services/Api.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loading from \"../components/Loading.js\";\r\nimport \"../style/Auth.scss\";\r\n\r\nconst SignIn = (props) => {\r\n    const {\r\n        loading,\r\n        history,\r\n        setLoading,\r\n        handleSignIn,\r\n        getUserInfo,\r\n        setVerified,\r\n        setUpdateClicked,\r\n        setDeleteClicked,\r\n    } = props;\r\n\r\n    const [ username, setUsername ] = useState(\"\");\r\n    const [ password, setPassword ] = useState(\"\");\r\n    const [ error, setError ] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const checkBox = document.querySelector(\".checkBox\");\r\n        if(checkBox.checked){\r\n          checkBox.checked = false;\r\n        }\r\n        if(localStorage.getItem(\"user\")){\r\n            history.push(\"/\")\r\n        }\r\n      }, [props])\r\n\r\n    function signin(e){\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        API.handleSignIn(username, password)\r\n        .catch(err => err)\r\n        .then(data => {\r\n            if(data.error){\r\n                setError(data.error);\r\n                setLoading(false);\r\n            } else {\r\n                handleSignIn(data);\r\n                setUsername(\"\");\r\n                setPassword(\"\");\r\n                getUserInfo();\r\n                setVerified(false);\r\n                setUpdateClicked(false);\r\n                setDeleteClicked(false);\r\n                setLoading(false);\r\n                history.push(\"/\")\r\n            }\r\n        })\r\n    }\r\n\r\n    function leadSignUpPage(){\r\n        history.push(\"/signup\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading ?\r\n            <Loading />\r\n            :\r\n            <div className=\"sign-in-wrapper\">\r\n                <div className=\"errorMessage-auth\">{error}</div>\r\n                <form className=\"addItemForm\" onSubmit={signin}>\r\n                    <div className=\"segment divInForm\">\r\n                      <center><h1 className=\"auth-title\">SIGN IN</h1></center>\r\n                    </div>\r\n                    <label className=\"inputLabel\">\r\n                        <input className=\"userInput\" type=\"text\" name=\"username\" value={username} placeholder=\"username\" onChange={(e) => setUsername(e.target.value)}/>\r\n                    </label>\r\n                    <label className=\"inputLabel\">\r\n                        <input className=\"userInput\" type=\"password\" name=\"password\" value={password} placeholder=\"password\" onChange={(e) => setPassword(e.target.value)}/>\r\n                    </label>\r\n                    <button className=\"red submitBtn\" type=\"submit\">Sign In</button>\r\n                    <div className=\"manualFormOpenBtn\" onClick={(e) => leadSignUpPage(e)}>Don&apos;t have an account yet?</div>\r\n                </form>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\nSignIn.propTypes = {\r\n    loading: PropTypes.bool.isRequired,\r\n    history: PropTypes.object.isRequired,\r\n    setLoading: PropTypes.func.isRequired,\r\n    handleSignIn: PropTypes.func.isRequired,\r\n    getUserInfo: PropTypes.func.isRequired,\r\n    setVerified: PropTypes.func.isRequired,\r\n    setUpdateClicked: PropTypes.func.isRequired,\r\n    setDeleteClicked: PropTypes.func.isRequired\r\n};\r\nexport default SignIn;","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loading from \"../components/Loading.js\";\r\nimport \"../style/Main.scss\";\r\n// import foodimage from '../images/nut.jpg';\r\nconst Main = (props) => {\r\n    const {\r\n        user,\r\n        loading,\r\n        history,\r\n        getUserInfo,\r\n    } = props;\r\n\r\n    useEffect(() => {\r\n        const checkBox = document.querySelector(\".checkBox\");\r\n        if(checkBox.checked){\r\n          checkBox.checked = false;\r\n        }\r\n        if(!user){\r\n            getUserInfo();\r\n        }\r\n    }, [props])\r\n\r\n    function leadIntakePage(){\r\n        history.push(\"/intakeestimate\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-wrapper\">\r\n            {loading ?\r\n            <Loading />\r\n            :\r\n            <div className=\"main-passage-wrapper\">\r\n                {/* <img src={foodimage}/> */}\r\n                <h1 className=\"main-title\">\r\n                    <div className=\"NU\">NUTRITION</div>\r\n                    <div className=\"TRACK\">Report</div>\r\n                </h1>\r\n                <div className=\"main-paragraph\">Your own <strong>nutrition</strong> coach for <strong>tracking</strong> healthy life.</div>\r\n                <div className=\"btn-wrapper\">\r\n                    <button  className=\"red submitBtn get-started-btn\" onClick={(e) => leadIntakePage(e)}>Get Started</button>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\nMain.propTypes = {\r\n    user: PropTypes.object,\r\n    loading: PropTypes.bool.isRequired,\r\n    history: PropTypes.object.isRequired,\r\n    getUserInfo: PropTypes.func.isRequired,\r\n};\r\nexport default Main;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../style/Main.scss\";\r\n\r\nconst CalorieBurnSuggestion = (props) => {\r\n    const {\r\n        result,\r\n        currDateCalorieSum\r\n    } = props;\r\n\r\n    function timeConverter(totalMin){\r\n        if(totalMin > 60){\r\n          var num = totalMin;\r\n          var hours = (num / 60);\r\n          var rhours = Math.floor(hours);\r\n          var minutes = (hours - rhours) * 60;\r\n          var rminutes = Math.round(minutes);\r\n          return rhours + \" hr \" + rminutes + \" min\";\r\n        }\r\n        return totalMin + \" min\";\r\n      }\r\n\r\n    return (\r\n        <div className=\"calorie-burn-suggestion-container\">\r\n            {result < 0 ?\r\n            <div className=\"exceeded-burn-cal-suggestion-wrapper\">\r\n                <div><strong>Today&apos;s Total Intake:</strong> <span className=\"not-exceeded-cal\">{currDateCalorieSum}</span> Kcal</div>\r\n                <div><strong>You&apos;ve exceeded</strong> <span className=\"exceeded-cal\">{Math.abs(result)}</span> Kcal</div>\r\n                    <div className=\"inner-calorie-burn-wrapper\">\r\n                <div className=\"account-exercise-title\">To Burn this</div>\r\n                <div className=\"burnThis-line\"></div>\r\n                    <div>\r\n                        <div className=\"exercise-name\">Walking </div><span className=\"account-calpermin\">{timeConverter((Math.abs(result) / 7.6).toFixed(1))}</span><br/>\r\n                        <div className=\"exercise-name\">Running </div> <span className=\"account-calpermin\">{timeConverter((Math.abs(result) / 13.2).toFixed(1))}</span><br/>\r\n                        <div className=\"exercise-name\">Push Ups </div> <span className=\"account-calpermin\">{timeConverter((Math.abs(result) / 7).toFixed(1))}</span><br/>\r\n                        <div className=\"exercise-name\">Sit Ups </div> <span className=\"account-calpermin\">{timeConverter((Math.abs(result) / 9).toFixed(1))}</span><br/>\r\n                        <div className=\"exercise-name\">Plank </div> <span className=\"account-calpermin\">{timeConverter((Math.abs(result) / 5).toFixed(1))}</span><br/>\r\n                        <div className=\"exercise-name\">Bicycle Crunch </div> <span className=\"account-calpermin\">{timeConverter((Math.abs(result) / 3).toFixed(1))}</span><br/>\r\n                        <div className=\"exercise-name\">Burpees </div><span className=\"account-calpermin\">{timeConverter((Math.abs(result) / 9.4).toFixed(1))}</span><br/>\r\n                        <div className=\"exercise-name\">Squat </div><span className=\"account-calpermin\">{timeConverter((Math.abs(result) / 8).toFixed(1))}</span><br/>\r\n                        <div className=\"exercise-name\">Lunges </div><span className=\"account-calpermin\">{timeConverter((Math.abs(result) / 9.33).toFixed(1))}</span><br/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div>\r\n                <div>Today&apos;s Total Intake: <span className=\"not-exceeded-cal\">{currDateCalorieSum}</span> Kcal</div>\r\n                <div>You have <span className=\"not-exceeded-cal\">{Math.abs(result)}</span> Kcal remaining</div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\nCalorieBurnSuggestion.propTypes = {\r\n    result: PropTypes.number.isRequired,\r\n    currDateCalorieSum: PropTypes.number.isRequired\r\n};\r\nexport default CalorieBurnSuggestion;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import \"../style/Profiles.scss\";\r\nconst Profile = (props) => {\r\n    const {\r\n        user,\r\n        handleRemainingCalorie\r\n    } = props;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile</h1>\r\n            <div className=\"line\"></div>\r\n            <div><strong>Username:</strong> {user.user.username}</div>\r\n            <div><strong>Name:</strong> {user.user.name}</div>\r\n            <div><strong>Email:</strong> {user.user.email}</div>\r\n            <div><strong>BMR:</strong> {user.user.bmr}</div>\r\n            <div className=\"calorie-guide-wrapper\">\r\n                {handleRemainingCalorie(user.user.bmr)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nProfile.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    handleRemainingCalorie: PropTypes.func.isRequired\r\n};\r\nexport default Profile;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BMRform = (props) => {\r\n    const {\r\n        bmrInput,\r\n        handleUpdateBMR,\r\n        setBMRInput,\r\n        leadToBMRpage\r\n    } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form className=\"addItemForm update-bmr-form\" onSubmit={(e) => handleUpdateBMR(e)}>\r\n                <h2>Update BMR</h2>\r\n                <div className=\"line\"></div>\r\n                <label className=\"inputLabel\">\r\n                    <input className=\"userInput\" type=\"text\" placeholder=\"BMR\" value={bmrInput} onChange={(e) => setBMRInput(e.target.value)} />\r\n                </label>\r\n                <button className=\"red submitBtn\" type=\"submit\">\r\n                    Update BMR\r\n                </button>\r\n                <div className=\"manualFormOpenBtn lead-bmr-estimate-btn\" onClick={(e) => leadToBMRpage(e)}>\r\n                    Want to know your BMR estimate?\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\nBMRform.propTypes = {\r\n    bmrInput: PropTypes.string,\r\n    handleUpdateBMR: PropTypes.func.isRequired,\r\n    setBMRInput: PropTypes.func.isRequired,\r\n    leadToBMRpage: PropTypes.func.isRequired\r\n};\r\nexport default BMRform;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AccountSubMenu = (props) => {\r\n    const {\r\n        history,\r\n        handleVerification,\r\n        handleUpdateBMRbtn,\r\n    } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"account-menu\">\r\n                <div className=\"update updateProToggleBtn\" onClick={(e) => handleVerification(history, e)}>\r\n                    Update Profile\r\n                </div>\r\n                <div className=\"update-bmr\" onClick={(e) => handleUpdateBMRbtn(e)}>\r\n                    Update BMR\r\n                </div>\r\n                <div className=\"delete delete-account\" onClick={(e) => handleVerification(history, e)}>\r\n                    Delete Account\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\nAccountSubMenu.propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n    handleUpdateBMRbtn: PropTypes.func.isRequired,\r\n    handleVerification: PropTypes.func.isRequired\r\n};\r\nexport default AccountSubMenu;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst UpdateProfileForm = (props) => {\r\n    const {\r\n        newPasswordInput,\r\n        newPasswordConfirmationInput,\r\n        newNameInput,\r\n        newEmailInput,\r\n        handleUpdateProfile,\r\n        handleVerification,\r\n        setNewPasswordInput,\r\n        setNewPasswordConfirmationInput,\r\n        setNewNameInput,\r\n        setNewEmailInput\r\n    } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form className=\"addItemForm\" onSubmit={(e) => handleUpdateProfile(e)}>\r\n                <h1>Update Profile</h1>\r\n                <div className=\"line\"></div>\r\n                <label className=\"inputLabel\">\r\n                    <input className=\"userInput\" type=\"password\" placeholder=\"New Password\" value={newPasswordInput} onChange={(e) => setNewPasswordInput(e.target.value)} />\r\n                </label>\r\n                <label className=\"inputLabel\">\r\n                    <input className=\"userInput\" type=\"password\" placeholder=\"Confirm Password\" value={newPasswordConfirmationInput} onChange={(e) => setNewPasswordConfirmationInput(e.target.value)} />\r\n                </label>\r\n                <label className=\"inputLabel\">\r\n                    <input className=\"userInput\" type=\"text\" placeholder=\"New Name\" value={newNameInput} onChange={(e) => setNewNameInput(e.target.value)} />\r\n                </label>\r\n                <label className=\"inputLabel\">\r\n                    <input className=\"userInput\" type=\"text\" placeholder=\"New Email\" value={newEmailInput} onChange={(e) => setNewEmailInput(e.target.value)} />\r\n                </label>\r\n                <button className=\"red submitBtn\" type=\"submit\">\r\n                    Update Profile\r\n                </button>\r\n                <div className=\"updateProToggleBtn\" onClick={(e) => handleVerification(e)}>\r\n                    Click here to Close the form\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\nUpdateProfileForm.propTypes = {        \r\n    newPasswordInput: PropTypes.string.isRequired,\r\n    newPasswordConfirmationInput: PropTypes.string.isRequired,\r\n    newNameInput: PropTypes.string.isRequired,\r\n    newEmailInput: PropTypes.string.isRequired,\r\n    handleUpdateProfile: PropTypes.func.isRequired,\r\n    handleVerification: PropTypes.func.isRequired,\r\n    setNewPasswordInput: PropTypes.func.isRequired,\r\n    setNewPasswordConfirmationInput: PropTypes.func.isRequired,\r\n    setNewNameInput: PropTypes.func.isRequired,\r\n    setNewEmailInput: PropTypes.func.isRequired,\r\n};\r\nexport default UpdateProfileForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AccountDeleteForm = (props) => {\r\n    const {\r\n        user,\r\n        handleAccountDelete,\r\n    } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"delete-form-wrapper\">\r\n                <div className=\"delete-inner-wrapper\">\r\n                    <h2>Delete Account</h2>\r\n                    <div className=\"line\"></div>\r\n                    <div>\r\n                        Once you delete your account, there is no going back. Please be certain\r\n                    </div>\r\n                    <button className=\"delete-account-btn\" onClick={(e) => handleAccountDelete(e, user.user)}>\r\n                        DELETE YOUR ACCOUNT\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\nAccountDeleteForm.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    handleAccountDelete: PropTypes.func.isRequired,\r\n};\r\nexport default AccountDeleteForm;","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../style/Account.scss\";\r\nimport API from \"../services/Api.js\";\r\nimport CalorieBurnSuggestion from \"../components/CalorieBurnSuggestion.js\";\r\nimport Loading from \"../components/Loading.js\";\r\nimport Profile from \"../components/Profile.js\";\r\nimport BMRform from \"../components/BMRform.js\";\r\nimport AccountSubMenu from \"../components/AccountSubMenu.js\";\r\nimport UpdateProfileForm from \"../components/UpdateProfileForm.js\";\r\nimport AccountDeleteForm from \"../components/AccountDeleteForm.js\";\r\n\r\nconst Account = (props) => {\r\n    const {\r\n        user,\r\n        history,\r\n        loading,\r\n        verified,\r\n        updateClicked,\r\n        deleteClicked,\r\n        getUserInfo,\r\n        setLoading,\r\n        setVerified,\r\n        handleVerification\r\n    } = props;\r\n\r\n    const [ bmrInput, setBMRInput ] = useState(\"\");\r\n    const [ newPasswordInput, setNewPasswordInput ] = useState(\"\");\r\n    const [ newPasswordConfirmationInput, setNewPasswordConfirmationInput ] = useState(\"\");\r\n    const [ newNameInput, setNewNameInput ] = useState(\"\");\r\n    const [ newEmailInput, setNewEmailInput ] = useState(\"\");\r\n    const [ updateBMRclicked, setUpdateBMRclicked ] = useState(false);\r\n    const [ currDateCalorieSum, setCurrDateCalorieSum ] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const checkBox = document.querySelector(\".checkBox\");\r\n        if(checkBox.checked){\r\n          checkBox.checked = false;\r\n        }\r\n        if(!user){\r\n            getUserInfo();\r\n        }\r\n    }, [props])\r\n\r\n    function handleUpdateBMR(e){\r\n        e.preventDefault();\r\n        if(window.confirm(\"Are you sure you want to update BMR?\")){\r\n            if(bmrInput > 0){\r\n                setLoading(true);\r\n                API.updateBMR(localStorage.getItem(\"user\"), bmrInput)\r\n                .catch(err => err)\r\n                .then(() => {\r\n                    setBMRInput(\"\");\r\n                    getUserInfo();\r\n                    setLoading(false);\r\n                });\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function handleUpdateProfile(e){\r\n        e.preventDefault();\r\n        if(window.confirm(\"Are you sure you want to update profile?\")){\r\n            if(newPasswordConfirmationInput !== newPasswordInput) return alert(\"Password and confirm password does not match\");\r\n            if(newPasswordInput.length >= 6 || newNameInput === \"\" || newEmailInput === \"\"){\r\n                setLoading(true);\r\n                API.updateProfile(localStorage.getItem(\"user\"), newPasswordInput, newNameInput, newEmailInput)\r\n                .catch(err => err)\r\n                .then(() => {\r\n                    setNewPasswordInput(\"\");\r\n                    setNewPasswordConfirmationInput(\"\");\r\n                    setNewNameInput(\"\");\r\n                    setNewEmailInput(\"\");\r\n                    setVerified(false);\r\n                    getUserInfo();\r\n                    setLoading(false);\r\n                });\r\n            } else {\r\n                console.log(\"Update Fail\");\r\n                return alert(\"Any input cannot be blank and Password has to be longer than 6\");\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function handleAccountDelete(e, user){\r\n        e.preventDefault();\r\n        if(window.confirm(\"Are you sure you want to delete account?\")){\r\n            setLoading(true);\r\n            API.deleteAccount(localStorage.getItem(\"user\"), user.username)\r\n            .catch(err => err)\r\n            .then(data => {\r\n                if(!data.error){\r\n                    localStorage.removeItem(\"user\");\r\n                    setLoading(false);\r\n                    alert(data.message)\r\n                    history.push(\"/\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function leadToBMRpage(){\r\n        history.push(\"/BMRestimate\");\r\n    }\r\n\r\n    function handleUpdateBMRbtn(e){\r\n        e.preventDefault();\r\n        setVerified(false);\r\n        if(!updateBMRclicked){\r\n            setUpdateBMRclicked(true);\r\n        }\r\n    }\r\n\r\n    function renderNuReports(){\r\n        API.getReports(localStorage.getItem(\"user\"))\r\n        .catch(err => err)\r\n        .then(data => {\r\n            handleTotalCalIntake(data);\r\n        });\r\n    }\r\n\r\n    function handleTotalCalIntake(data){\r\n        if(localStorage.getItem(\"user\")){\r\n            let sum = 0;\r\n            data.forEach(data => {\r\n                let currMonth = new Date().getMonth() + 1;\r\n                let currYear = new Date().getFullYear();\r\n                let currDate = new Date().getDate();\r\n                let reportMonth = parseInt(data.intakeDate.split(\"-\")[1]);\r\n                let reportYear = parseInt(data.intakeDate.split(\"-\")[0]);\r\n                let reportDate = parseInt(data.intakeDate.split(\"-\")[2]);\r\n                if(currYear === reportYear && currMonth === reportMonth && currDate === reportDate){\r\n                    data.intakes.forEach(data => {\r\n                        sum += data.calories;\r\n                    });\r\n                }\r\n            })\r\n            setCurrDateCalorieSum(sum);\r\n        }\r\n    }\r\n\r\n    function handleRemainingCalorie(bmr){\r\n        if(!bmr) return \"Please Update your BMR\";\r\n        let result = bmr - (currDateCalorieSum);\r\n        return <CalorieBurnSuggestion result={result} currDateCalorieSum={currDateCalorieSum} />\r\n    }\r\n\r\n    return (\r\n        <div className=\"account-wrapper\">\r\n            {renderNuReports()}\r\n            <AccountSubMenu\r\n                history={history}\r\n                handleVerification={handleVerification}\r\n                handleUpdateBMRbtn={handleUpdateBMRbtn}\r\n            />\r\n            {loading ?\r\n            <Loading />\r\n            :\r\n            <div className=\"account-info\">\r\n                {user ? \r\n                <Profile \r\n                    user={user} \r\n                    handleRemainingCalorie={handleRemainingCalorie}\r\n                />\r\n                :\r\n                null}\r\n                <div className=\"account-bmr-form-wrapper\">\r\n                    {updateBMRclicked ?\r\n                    <BMRform\r\n                        handleUpdateBMR={handleUpdateBMR}\r\n                        bmrInput={bmrInput}\r\n                        setBMRInput={setBMRInput}\r\n                        leadToBMRpage={leadToBMRpage}\r\n                    />\r\n                    : \r\n                    null}\r\n                </div>\r\n                <div className=\"update-profile-form\">\r\n                    {verified && updateClicked ?\r\n                    <UpdateProfileForm\r\n                        handleUpdateProfile={handleUpdateProfile}\r\n                        setNewPasswordInput={setNewPasswordInput}\r\n                        setNewPasswordConfirmationInput={setNewPasswordConfirmationInput}\r\n                        setNewNameInput={setNewNameInput}\r\n                        setNewEmailInput={setNewEmailInput}\r\n                        newPasswordInput={newPasswordInput}\r\n                        newPasswordConfirmationInput={newPasswordConfirmationInput}\r\n                        newNameInput={newNameInput}\r\n                        newEmailInput={newEmailInput}\r\n                        handleVerification={handleVerification}\r\n                    />\r\n                    :\r\n                    null}\r\n                </div>\r\n                <div className=\"delete-column-container\">\r\n                    {verified && deleteClicked ?\r\n                    <AccountDeleteForm\r\n                        user={user}\r\n                        handleAccountDelete={handleAccountDelete}\r\n                    />\r\n                    :\r\n                    null}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\nAccount.propTypes = {\r\n    user: PropTypes.object,\r\n    history: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    verified: PropTypes.bool.isRequired,\r\n    updateClicked: PropTypes.bool.isRequired,\r\n    deleteClicked: PropTypes.bool.isRequired,\r\n    getUserInfo: PropTypes.func.isRequired,\r\n    setLoading: PropTypes.func.isRequired,\r\n    setVerified: PropTypes.func.isRequired,\r\n    handleVerification: PropTypes.func.isRequired\r\n};\r\nexport default Account;","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loading from \"../components/Loading.js\";\r\nimport API from \"../services/Api.js\";\r\nimport \"../style/Auth.scss\";\r\n\r\nconst Verification = (props) => {\r\n    const {\r\n        user,\r\n        history,\r\n        loading,\r\n        updateClicked,\r\n        deleteClicked,\r\n        setLoading,\r\n        setVerified,\r\n        setUpdateClicked,\r\n        setDeleteClicked,\r\n    } = props;\r\n\r\n    const [ username, setUsername ] = useState(\"\");\r\n    const [ password, setPassword ] = useState(\"\");\r\n    const [ error, setError ] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const checkBox = document.querySelector(\".checkBox\");\r\n        if(checkBox.checked){\r\n          checkBox.checked = false;\r\n        }\r\n        if(!updateClicked && !deleteClicked){\r\n            history.push(\"/\");\r\n        }\r\n      }, [props])\r\n\r\n    function handleVerify(e){\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        API.handleSignIn(username, password)\r\n        .catch(err => err)\r\n        .then(data => {\r\n            if(data.error){\r\n                setError(data.error);\r\n                setLoading(false);\r\n            } else {\r\n                if(data.user.username === user.user.username){\r\n                    setUsername(\"\");\r\n                    setPassword(\"\");\r\n                    setVerified(true);\r\n                    setLoading(false);\r\n                    history.push(\"/account\");\r\n                } else {\r\n                    setLoading(false);\r\n                    setError(\"Invalid Username or Password\");\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    function handleGoBack(){\r\n        setUpdateClicked(false);\r\n        setDeleteClicked(false);\r\n        history.push(\"/account\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading ?\r\n            <Loading />\r\n            :\r\n            <div className=\"sign-in-wrapper\">\r\n                <div className=\"errorMessage-auth\">{error}</div>\r\n                <form className=\"addItemForm\" onSubmit={handleVerify}>\r\n                    <div className=\"segment divInForm\">\r\n                        <h1 className=\"verify-title\">Please, Verify It&apos;s you</h1>\r\n                    </div>\r\n                    <label className=\"inputLabel\">\r\n                        <input className=\"userInput\" type=\"text\" name=\"username\" value={username} placeholder=\"username\" onChange={(e) => setUsername(e.target.value)}/>\r\n                    </label>\r\n                    <label className=\"inputLabel\">\r\n                        <input className=\"userInput\" type=\"password\" name=\"password\" value={password} placeholder=\"password\" onChange={(e) => setPassword(e.target.value)}/>\r\n                    </label>\r\n                    <button className=\"red submitBtn\" type=\"submit\">Verify</button>\r\n                </form>\r\n                <div className=\"updateProToggleBtn\" onClick={(e) => handleGoBack(e)}>\r\n                    Go Back to Account\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\nVerification.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    history: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    updateClicked: PropTypes.bool.isRequired,\r\n    deleteClicked: PropTypes.bool.isRequired,\r\n    setLoading: PropTypes.func.isRequired,\r\n    setVerified: PropTypes.func.isRequired,\r\n    setUpdateClicked: PropTypes.func.isRequired,\r\n    setDeleteClicked: PropTypes.func.isRequired\r\n};\r\nexport default Verification;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API from \"../services/Api.js\";\r\nimport \"../style/NuReportCard.scss\";\r\n\r\nconst NuReportCard = (props) => {\r\n    const {\r\n        report,\r\n        renderNuReports,\r\n    } = props;\r\n\r\n    function handleDeleteReport(e, report){\r\n        e.preventDefault();\r\n        if(window.confirm(`Are you sure you want to delete the ${report.reportName} report?`)){\r\n            API.deleteReport(localStorage.getItem(\"user\"), report.id)\r\n            .catch(err => err)\r\n            .then(() => renderNuReports());\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"nuReportCard\">\r\n            <button className=\"report-delete-btn\" onClick={(e) => handleDeleteReport(e, report)}>X</button>\r\n            <Link to={`overview/nutrition_reports/${report.id}`} className=\"report-card-link\">\r\n                <div className=\"nuReportCard-inner-wrapper\">\r\n                    <div className=\"report-info-div\">\r\n                        <div className=\"report-name\">{report.reportName}</div>\r\n                        <div>{report.intakeDate}</div>\r\n                        <div>Intakes: {report.intakes.length}</div>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\nNuReportCard.propTypes = {\r\n    report: PropTypes.object.isRequired,\r\n    renderNuReports: PropTypes.func.isRequired,\r\n};\r\nexport default NuReportCard;","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport \"../style/OverviewPieChart.scss\";\r\n\r\nconst OverviewPieChart = (props) => {\r\n    const {\r\n        curr,\r\n        nutritions,\r\n    } = props;\r\n\r\n    const [ totalNutrition, setTotalNutrition ] = useState(0);\r\n    const [ totalCurrNutrition, setTotalCurrNutrition ] = useState(0);\r\n    const [ currColor, setCurrColor ] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        handleTotalNutritionCalc();\r\n        handleCalcNutrition();\r\n    });\r\n\r\n    let chartData = [\r\n        { title: curr, value: totalCurrNutrition, color: currColor },\r\n        { title: \"empty\", value: totalNutrition-totalCurrNutrition, color: \"#E0E0E0\" }\r\n    ];\r\n\r\n    function handleTotalNutritionCalc(){\r\n        let sum = 0;\r\n        let nutrition = [\"carbs\", \"protein\", \"fat\", \"fiber\"];\r\n        let colors = {\r\n            \"carbs\": \"#E96255\",\r\n            \"protein\": \"#EFC319\",\r\n            \"fat\": \"#96C93D\",\r\n            \"fiber\": \"#58A5BD\"\r\n        };\r\n        nutrition.forEach(name => {\r\n            nutritions[name].map(el => {\r\n                sum += el.value;\r\n            })\r\n        })\r\n        setTotalNutrition(sum);\r\n        setCurrColor(colors[curr]);\r\n    }\r\n\r\n    function handleCalcNutrition(){\r\n        let sum = 0;\r\n        nutritions[curr].map(el => {\r\n            sum += el.value;\r\n        })\r\n        setTotalCurrNutrition(sum);\r\n    }\r\n\r\n    const capitalizeFirstLetter = (string) => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    function handlePercentageCalc(){\r\n        let result = ((totalCurrNutrition / totalNutrition)*100).toFixed(1);\r\n        return isNaN(result) ? 0 : result;\r\n    }\r\n\r\n    return (\r\n        <div className=\"pieChart-container\">\r\n            <div className=\"overview-donutChart\">\r\n                <div className=\"overview-chart\">\r\n                    <PieChart\r\n                        animate\r\n                        animationDuration={800}\r\n                        animationEasing=\"ease-out\"\r\n                        center={[50, 50]}\r\n                        data={chartData}\r\n                        lengthAngle={360}\r\n                        lineWidth={3}\r\n                        paddingAngle={0}\r\n                        startAngle={0}\r\n                        viewBoxSize={[100, 100]}\r\n                        labelPosition={60}\r\n                        labelStyle={{\r\n                        fontSize: \"5px\",\r\n                        fontColor: \"FFFFA\",\r\n                        fontWeight: \"800\",\r\n                        }}\r\n                    ></PieChart>\r\n                </div>\r\n                <div className={\"percentage-info-wrapper-\"+curr}>\r\n                    <div className=\"percentage-title\">{capitalizeFirstLetter(curr)}</div>\r\n                    <div className=\"percentage-number\">{handlePercentageCalc()} <span className=\"percent\">%</span></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nOverviewPieChart.propTypes = {\r\n    curr: PropTypes.string.isRequired,\r\n    nutritions: PropTypes.object.isRequired,\r\n};\r\nexport default OverviewPieChart;","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport API from \"../services/Api.js\";\r\nimport NuReportCard from \"../components/NuReportCard.js\";\r\nimport OverviewPieChart from \"../components/OverviewPieChart.js\";\r\nimport \"../style/NuReportCard.scss\";\r\nimport \"../style/Overview.scss\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Chart, BarSeries, Title, ArgumentAxis, ValueAxis } from \"@devexpress/dx-react-chart-material-ui\";\r\nimport { Animation } from \"@devexpress/dx-react-chart\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport Loading from \"../components/Loading.js\";\r\nimport \"react-dropdown/style.css\";\r\n\r\nconst Overview = (props) => {\r\n    const {\r\n        user,\r\n        history,\r\n        loading,\r\n        getUserInfo,\r\n    } = props;\r\n\r\n    const [ nuReports, setNuReports ] = useState([]);\r\n    const [ selectedYear, setSelectedYear ] = useState(\"\");\r\n    const [ selectedMonth, setSelectedMonth ] = useState(\"\");\r\n    const [ yearOptions, setYearOptions ] = useState([]);\r\n    const [ monthOptions, setMonthOptions ] = useState([]);\r\n    let filteredData = [];\r\n    const nutritions = {};\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"user\")) {\r\n            history.push(\"/signin\")\r\n        } else {\r\n            const checkBox = document.querySelector(\".checkBox\");\r\n            if(checkBox.checked) checkBox.checked = false;\r\n            if(!user) getUserInfo();\r\n            renderNuReports();\r\n            handleSetYearOptions();\r\n            handleSetMonthOptions();\r\n        }\r\n    }, [props])\r\n\r\n    function handleSetYearOptions(){\r\n        let currYear = new Date().getFullYear();\r\n        let temp = [\"------\"];\r\n        for(let i = currYear; i >= 2010; i--){\r\n            temp.push(i);\r\n        }\r\n        setYearOptions(temp);\r\n    }\r\n\r\n    function handleSetMonthOptions(){\r\n        let temp = [\"------\"];\r\n        for(let i = 1; i <= 12; i++){\r\n            temp.push(i);\r\n        }\r\n        setMonthOptions(temp);\r\n    }\r\n\r\n    function renderNuReports(){\r\n        API.getReports(localStorage.getItem(\"user\"))\r\n        .catch(err => err)\r\n        .then(data => {\r\n            let sortedData = data.sort(function(a, b) {\r\n                var keyA = new Date(a.created_at),\r\n                  keyB = new Date(b.created_at);\r\n                if (keyA < keyB) return 1;\r\n                if (keyA > keyB) return -1;\r\n                return 0;\r\n            });\r\n            setNuReports(sortedData);\r\n        });\r\n    }\r\n\r\n    function handleNuReportCard(){\r\n        const arr = [];\r\n        if(selectedYear !== \"\" && selectedMonth !== \"\" && selectedYear !== \"------\" && selectedMonth !== \"------\"){\r\n            nuReports.forEach(report => {\r\n                let reportYear = parseInt(report.intakeDate.split(\"-\")[0]);\r\n                let reportMonth = parseInt(report.intakeDate.split(\"-\")[1]);\r\n                if(reportYear === selectedYear && reportMonth === selectedMonth){\r\n                    arr.push(report);\r\n                }\r\n            })\r\n            return arr.map((report) => {\r\n                return (\r\n                    <NuReportCard key={report.id} report={report} renderNuReports={renderNuReports} />\r\n                );\r\n            });\r\n        } else if(selectedYear === \"\" || selectedYear === \"\" || selectedYear === \"------\" || selectedMonth === \"------\"){\r\n            return nuReports.map((report) => {\r\n                return (\r\n                    <NuReportCard key={report.id} report={report} renderNuReports={renderNuReports} />\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleNuCalculation(nutrition){\r\n        let arr = [];\r\n        let lastDate = new Date(selectedYear, selectedMonth, 0).getDate();\r\n        for(let i = 1; i <= lastDate; i++){\r\n            arr.push({ date: i.toString(), value: 0});\r\n        }\r\n        nuReports.forEach(report => {\r\n            let reportYear = parseInt(report.intakeDate.split(\"-\")[0]);\r\n            let reportMonth = parseInt(report.intakeDate.split(\"-\")[1]);\r\n            if(reportYear === selectedYear && reportMonth === selectedMonth){\r\n                let reportDate = parseInt(report.intakeDate.split(\"-\")[2]);\r\n                let totalNut = handleSumUpNut(report, nutrition);\r\n                arr[reportDate-1].value += totalNut;\r\n            }\r\n        })\r\n        filteredData = arr;\r\n        nutritions[nutrition] = filteredData;\r\n    }\r\n\r\n    function handleSumUpNut(report, nutrition){\r\n        let total = 0;\r\n        report.intakes.forEach(intake => {\r\n            total += intake[nutrition]\r\n        })\r\n        return total;\r\n    }\r\n\r\n    const capitalizeFirstLetter = (string) => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    function renderNuCharts(){\r\n        let nutrition = [\"calories\", \"carbs\", \"protein\", \"fat\", \"fiber\"];\r\n        let colors = [\"#58A5BD\", \"#96C93D\", \"#EFC319\", \"#E96255\", \"#00B0B1\"];\r\n        return nutrition.map(nutrition => {\r\n            let scale = nutrition === \"calories\" ? \"(Kcal)\" : \"(g)\";\r\n            let color = colors.pop();\r\n            if(selectedYear !== 0 && selectedMonth !== 0){\r\n                handleNuCalculation(nutrition);\r\n            }\r\n            return (\r\n                \r\n                <div className=\"each-chart\" key={nutrition}>\r\n                    <Paper className=\"paper-chart\">\r\n                        <Chart data={filteredData}>\r\n                            <ArgumentAxis />\r\n                            <ValueAxis max={31} />\r\n                            <BarSeries\r\n                                valueField=\"value\"\r\n                                argumentField=\"date\"\r\n                                color={color}\r\n                                barWidth={1.3}\r\n                            />\r\n                            <Title text={`${capitalizeFirstLetter(nutrition)} ${scale}`} />\r\n                            <Animation />\r\n                        </Chart>\r\n                    </Paper>\r\n                </div>\r\n                \r\n                )\r\n        })\r\n    }\r\n\r\n    function handleStringifyMonth(){\r\n        if(!isNaN(selectedMonth)){\r\n            if(selectedYear === \"\" || selectedMonth === \"\") return \"\";\r\n            let date = new Date(selectedYear, selectedMonth-1);\r\n            if(isNaN(date.getTime())) return \"\";\r\n            return date.toLocaleString(\"en-us\", { month: \"long\" });\r\n        }\r\n    }\r\n\r\n    function handleOverviewPieChart(){\r\n        let nutrition = [\"carbs\", \"protein\", \"fat\", \"fiber\"];\r\n        return nutrition.map(el => {\r\n            return <OverviewPieChart nutritions={nutritions} curr={el} key={el} />\r\n        })\r\n    }\r\n\r\n    function handleSelectedYear(){\r\n        if(selectedYear === \"------\") return \"\";\r\n        return selectedYear;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {loading ?\r\n        <Loading />\r\n        :\r\n        <div className=\"overview-wrapper\">\r\n            <div className=\"dropdown-menu-date-selection\">\r\n                <Dropdown className=\"drop-down-year\" options={yearOptions} onChange={(e) => setSelectedYear(e.value)} value={\"Select a year\"} placeholder=\"Select a year\" />\r\n                <Dropdown className=\"drop-down-month\" options={monthOptions} onChange={(e) => setSelectedMonth(e.value)} value={\"Select a month\"} placeholder=\"Select a month\" />\r\n            </div>\r\n            <div className=\"nuReportCardsCont\">\r\n                {handleNuReportCard()}\r\n            </div>\r\n            <h1 className=\"overview-date-year-title\">{handleStringifyMonth()} {handleSelectedYear()}</h1>\r\n            <div>\r\n                {handleOverviewPieChart()}\r\n            </div>\r\n            <div className=\"plot-container\">\r\n                <div className=\"inner-plot-container\">\r\n                    {renderNuCharts()}\r\n                </div>\r\n            </div>\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\nOverview.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    history: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    getUserInfo: PropTypes.func.isRequired,\r\n};\r\nexport default Overview;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../style/FoodCard.scss\";\r\n\r\nconst NuReportItem = (props) => {\r\n    const {\r\n        food,\r\n    } = props;\r\n\r\n    const capitalizeFirstLetter = (string) => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n    \r\n    const handleDetail = (e) => {\r\n        const parentNodeDOM = e.target.parentNode.parentNode;\r\n        if (parentNodeDOM.style.overflow === \"visible\"){\r\n            parentNodeDOM.style.overflow = \"hidden\";\r\n            parentNodeDOM.style.height = \"4.5em\";\r\n            e.target.innerText = \"More Detail\"\r\n        } else {\r\n            parentNodeDOM.style.overflow = \"visible\";\r\n            parentNodeDOM.style.height = \"10em\";\r\n            e.target.innerText = \"Show Less\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"foodCard\" data-id={food.id}>\r\n            <div className=\"innerCard\">\r\n                <div>\r\n                    <strong>{capitalizeFirstLetter(food.name)}</strong>\r\n                </div>\r\n                <div><span className=\"details\">Qty:</span> {food.quantity}</div>\r\n                <div className=\"moreDetail\" onClick={(e) => handleDetail(e)}>More Detail</div>\r\n                <div><span className=\"details\">Carbs:</span> {food.carbs.toFixed(2)}g</div>\r\n                <div><span className=\"details\">Protein: </span> {food.protein.toFixed(2)}g</div>\r\n                <div><span className=\"details\">Fat:</span> {food.fat.toFixed(2)}g</div>\r\n                <div><span className=\"details\">Fiber:</span> {food.fiber.toFixed(2)}g</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nNuReportItem.propTypes = {\r\n    food: PropTypes.object.isRequired,\r\n};\r\nexport default NuReportItem;","import React,{ useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport API from \"../services/Api.js\";\r\nimport NuReportItem from \"../components/NuReportItem.js\";\r\nimport Legend from \"../components/Legend.js\";\r\nimport Loading from \"../components/Loading.js\";\r\nimport \"../style/NuReportDisplay.scss\";\r\n\r\nconst NuReportDisplay = (props) => {\r\n    const {\r\n        user,\r\n        history,\r\n        match,\r\n        loading,\r\n        getUserInfo,\r\n    } = props;\r\n\r\n    const [calories, setCalories] = useState(0);\r\n    const [carbs, setCarbs] = useState(0.000045);\r\n    const [protein, setProtein] = useState(0.00003);\r\n    const [fat, setFats] = useState(0.00002);\r\n    const [fiber, setFiber] = useState(0.000005);\r\n    const [reportData, setReportData] = useState([]);\r\n\r\n    const chartData = [\r\n        { title: \"Carbs\", value: carbs, color: \"#E96255\" },\r\n        { title: \"Protein\", value: protein, color: \"#EFC319\" },\r\n        { title: \"Fat\", value: fat, color: \"#96C93D\" },\r\n        { title: \"Fiber\", value: fiber, color: \"#58A5BD\" },\r\n      ];\r\n\r\n    const handleNuCalc = useCallback((data) =>{\r\n        if(data){\r\n            let maxCal = 0;\r\n            let maxCarbs = 0;\r\n            let maxPro = 0;\r\n            let maxFat = 0;\r\n            let maxFiber = 0;\r\n            data.forEach(item => {\r\n                maxCal += item.calories;\r\n                maxCarbs += item.carbs;\r\n                maxPro += item.protein;\r\n                maxFat += item.fat;\r\n                maxFiber += item.fiber;\r\n            })\r\n            setCalories(maxCal);\r\n            setCarbs(maxCarbs);\r\n            setProtein(maxPro);\r\n            setFats(maxFat);\r\n            setFiber(maxFiber);\r\n        } else {\r\n            history.push(\"/\");\r\n        }\r\n    }, [props]);\r\n\r\n    const handleRenderReport = useCallback(() => {\r\n        API.getReport(localStorage.getItem(\"user\"), match.params.id)\r\n        .catch(err => err)\r\n        .then(data => {\r\n            setReportData(data);\r\n            handleNuCalc(data.intakes);\r\n        });\r\n    }, [match.params.id, handleNuCalc]);\r\n\r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"user\")) {\r\n            history.push(\"/signin\");\r\n        } else {\r\n            const checkBox = document.querySelector(\".checkBox\");\r\n            if(checkBox.checked) checkBox.checked = false;\r\n            if(!user) getUserInfo();\r\n            if(!reportData.length) handleRenderReport();\r\n        }\r\n    }, [props, reportData.length, handleRenderReport])\r\n\r\n    function handleFoodCards() {\r\n        if(reportData.intakes){\r\n            return reportData.intakes.map((food) => {\r\n                return (\r\n                    <NuReportItem food={food} key={food.id + Math.random()} />\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading ?\r\n            <Loading />\r\n            :\r\n            <div>\r\n                <div className=\"nuReport-info\">\r\n                    {reportData.reportName ?\r\n                    <div>\r\n                        <div className=\"nuReport-title\">{reportData.reportName}</div>\r\n                        <div>Intake Date: {reportData.intakeDate}</div>\r\n                        <div>Report Saved at: {reportData.created_at.split(\"T\")[0]}</div>\r\n                    </div>\r\n                    :\r\n                    null}\r\n                </div>\r\n                <div className=\"donutChart\">\r\n                    <div className=\"chart\">\r\n                        <PieChart\r\n                            animate\r\n                            animationDuration={800}\r\n                            animationEasing=\"ease-out\"\r\n                            center={[50, 50]}\r\n                            data={chartData}\r\n                            lengthAngle={360}\r\n                            lineWidth={75}\r\n                            paddingAngle={2}\r\n                            startAngle={0}\r\n                            viewBoxSize={[100, 100]}\r\n                            label={({ dataEntry }) =>\r\n                                `${dataEntry.title}: ${Math.round(dataEntry.percentage)}%`\r\n                            }\r\n                                labelPosition={60}\r\n                                labelStyle={{\r\n                                fontSize: \"5px\",\r\n                                fontColor: \"FFFFA\",\r\n                                fontWeight: \"800\",\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"calories\">{calories}<br />Kcal</div>\r\n                </div>\r\n                <div className=\"legend-wrapper\">\r\n                    <Legend\r\n                    carbs={carbs.toFixed(2)}\r\n                    protein={protein.toFixed(2)}\r\n                    fat={fat.toFixed(2)}\r\n                    fiber={fiber.toFixed(2)}\r\n                    />\r\n                </div>\r\n                <div className=\"nuReportFoodCardsCont\">{handleFoodCards()}</div>\r\n                {reportData.user_id && user.user.id !== reportData.user_id ? history.push(\"/\") : null}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\nNuReportDisplay.propTypes = {\r\n    user: PropTypes.object,\r\n    history: PropTypes.object.isRequired,\r\n    match: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    getUserInfo: PropTypes.func.isRequired\r\n};\r\nexport default NuReportDisplay;","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport API from '../services/Api.js';\r\nimport Nutrition from '../pages/Nutrition';\r\nimport Navbar from './Navbar.js';\r\nimport BMRestimate from '../pages/BMRestimate.js';\r\nimport SignUp from '../pages/SignUp.js';\r\nimport SignIn from '../pages/SignIn.js';\r\nimport Main from '../pages/Main.js';\r\nimport Account from '../pages/Account.js';\r\nimport Verification from '../pages/Verification';\r\nimport Overview from '../pages/Overview.js';\r\nimport NuReportDisplay from '../pages/NuReportDisplay.js';\r\nimport '../style/App.scss';\r\n// import foodimage from  '../images/nut.jpg';\r\nconst App = () => {\r\n  const [ user, setUserData ] = useState();\r\n  const [ verified, setVerified ] = useState(false);\r\n  const [ updateClicked, setUpdateClicked ] = useState(false);\r\n  const [ deleteClicked, setDeleteClicked ] = useState(false);\r\n  const [ loading, setLoading ] = useState(false);\r\n\r\n  useEffect(() => {\r\n      getUserInfo();\r\n  }, [])\r\n\r\n  function handleSignIn(user){\r\n    localStorage.setItem('user', user.jwt);\r\n  }\r\n\r\n  function handleLogout(){\r\n    localStorage.removeItem('user');\r\n  }\r\n\r\n  function getUserInfo(){\r\n    if(localStorage.getItem('user')){\r\n      setLoading(true);\r\n      API.getUserInfo(localStorage.getItem('user'))\r\n      .catch(err => err)\r\n            .then(data => {\r\n              setUserData(data);\r\n              setLoading(false);\r\n            })\r\n    }\r\n  }\r\n\r\n  function handleVerification(history, e){\r\n    setDeleteClicked(false);\r\n    setUpdateClicked(false);\r\n    if(!verified){\r\n      if(!e.target.classList.contains(\"delete\")){\r\n        setUpdateClicked(true);\r\n      } else {\r\n        setDeleteClicked(true);\r\n      }\r\n      history.push('/verify');\r\n    } else {\r\n      setVerified(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n  \r\n    <div className=\"App\">\r\n      {/* <img src={foodimage}/> */}\r\n      <Router>\r\n      {/* <img src={foodimage}/> */}\r\n        <Navbar handleLogout={handleLogout} />\r\n        <Switch>\r\n            <Route exact path=\"/\" render={(routeProps) => {return <Main {...routeProps} loading={loading} setLoading={setLoading} user={user} getUserInfo={getUserInfo} />}} />\r\n            <Route exact path=\"/intakeestimate\" render={(routeProps) => {return <Nutrition {...routeProps} loading={loading} setLoading={setLoading} user={user} getUserInfo={getUserInfo} />}} />\r\n            <Route exact path=\"/overview\" render={(routeProps) => {return <Overview {...routeProps} loading={loading} setLoading={setLoading} user={user} getUserInfo={getUserInfo} />}} />\r\n            <Route exact path=\"/overview/nutrition_reports/:id\" render={(routeProps) => {return <NuReportDisplay {...routeProps} loading={loading} setLoading={setLoading} user={user} getUserInfo={getUserInfo} />}} />\r\n            <Route exact path=\"/BMRestimate\" render={(routeProps) => {return <BMRestimate {...routeProps} loading={loading} setLoading={setLoading} user={user} getUserInfo={getUserInfo} />}} />\r\n            <Route exact path=\"/signup\" render={(routeProps) => {return <SignUp {...routeProps} />}} loading={loading} setLoading={setLoading} />\r\n            <Route exact path=\"/signin\" render={(routeProps) => {return <SignIn {...routeProps} loading={loading} setLoading={setLoading} handleSignIn={handleSignIn} getUserInfo={getUserInfo} setVerified={setVerified} setUpdateClicked={setUpdateClicked} setDeleteClicked={setDeleteClicked} />}} />\r\n            <Route exact path=\"/account\" render={(routeProps) => {return <Account {...routeProps} loading={loading} setLoading={setLoading} user={user} getUserInfo={getUserInfo} verified={verified} setVerified={setVerified} handleVerification={handleVerification} updateClicked={updateClicked} setUpdateClicked={setUpdateClicked} deleteClicked={deleteClicked} setDeleteClicked={setDeleteClicked} />}} />\r\n            <Route exact path=\"/verify\" render={(routeProps) => {return <Verification {...routeProps} loading={loading} setLoading={setLoading} user={user} getUserInfo={getUserInfo} verified={verified} setVerified={setVerified} handleVerification={handleVerification} updateClicked={updateClicked} setUpdateClicked={setUpdateClicked} deleteClicked={deleteClicked} setDeleteClicked={setDeleteClicked} />}} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport swDev from './swDev.js';\r\nimport HttpsRedirect from 'react-https-redirect';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <HttpsRedirect>\r\n      <App />\r\n    </HttpsRedirect>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\nswDev();\r\n","export default function swDev(){\r\n    const swURL = `${process.env.PUBLIC_URL}/sw.js`\r\n    navigator.serviceWorker.register(swURL).then(response => {\r\n        console.warn(\"response\", response)\r\n    })\r\n}"],"sourceRoot":""}